name: Rust Release

on:
  push:
    tags:
      - "v**"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  bin-name: qstract

permissions:
  contents: write
  id-token: write
  attestations: write

jobs:
  release:
    outputs:
      tag: ${{ github.ref_name }}
      name: ${{ github.ref_name }}
      prerelease: ${{ steps.regex-tag.outputs.match == '' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: KyoriPowered/action-regex-match@v4
        id: regex-tag
        with:
          text: ${{ github.ref }}
          regex: '^refs\/tags\/v\d+\.\d+\.\d+$'

  publish-github-com:
    runs-on: ubuntu-latest
    needs: [release, build-native, build-ink-cross]
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: actions/download-artifact@v4
      - name: Merge hashes
        shell: bash
        run: |
          set -euxo pipefail
          echo -n "" > hashes.sha256
          for D in target-*; do
            if [ -d "${D}" ]; then
              echo "${D}"
              pushd "${D}"
              cat ./*.sha256 >> ../hashes.sha256
              popd
            fi
          done
      - name: Create and push artifacts to release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ needs.release.outputs.tag }}
          name: ${{ needs.release.outputs.name }}
          allowUpdates: true
          prerelease: ${{ needs.release.outputs.prerelease }}
          artifacts: "target-*/qstract-*,hashes.sha256"
          body: ""

  build-native:
    strategy:
      fail-fast: false
      matrix:
        rust-version: [nightly]
        info:
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            file_ext: .exe
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            file_ext: .exe
    runs-on: ${{ matrix.info.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: cargo-prebuilt/cargo-prebuilt-action@v4
        with:
          pkgs: cargo-auditable,coreutils
      - uses: dtolnay/rust-toolchain@master
        id: toolchain
        with:
          toolchain: ${{ matrix.rust-version }}
          targets: ${{ matrix.info.target }}
          components: rust-src
      - name: Build
        run: cargo +${{steps.toolchain.outputs.name}} auditable build --verbose --workspace --profile=zmall --locked --target ${{ matrix.info.target }}
      - name: Rename
        run: cp ./target/${{ matrix.info.target }}/zmall/${{ env.bin-name }}${{ matrix.info.file_ext }} ./${{ env.bin-name }}-${{ matrix.info.target }}${{ matrix.info.file_ext }}
      - name: Chmod
        if: ${{ ! contains(matrix.info.target, 'windows') }}
        run: chmod +x ./${{ env.bin-name }}-${{ matrix.info.target }}
      - uses: actions/attest-build-provenance@v2
        with:
          subject-path: ./${{ env.bin-name }}-${{ matrix.info.target }}${{ matrix.info.file_ext }}
      - name: Hash
        run: coreutils sha256sum ./${{ env.bin-name }}-${{ matrix.info.target }}${{ matrix.info.file_ext }} > ${{ matrix.info.target }}.sha256
      - name: Artifact
        uses: actions/upload-artifact@v4
        with:
          name: target-${{ matrix.info.target }}
          path: |
            ${{ env.bin-name }}-${{ matrix.info.target }}${{ matrix.info.file_ext }}
            ${{ matrix.info.target }}.sha256

  build-ink-cross:
    strategy:
      matrix:
        rust-version: [nightly]
        info:
          - target: aarch64-unknown-linux-gnu
          - target: aarch64-unknown-linux-musl
          - target: armv7-unknown-linux-gnueabihf
          - target: armv7-unknown-linux-musleabihf
          - target: powerpc64le-unknown-linux-gnu
          - target: powerpc64-unknown-linux-gnu
          - target: riscv64gc-unknown-linux-gnu
          - target: s390x-unknown-linux-gnu
          - target: x86_64-unknown-linux-gnu
          - target: x86_64-unknown-linux-musl
          - target: x86_64-unknown-freebsd
          - target: x86_64-unknown-netbsd
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: cargo-prebuilt/cargo-prebuilt-action@v4
        with:
          pkgs: coreutils
      - name: Build with ink cross
        run: |
          docker run --rm \
          --userns host --user "$(id -u)":"$(id -g)" \
          -v ./:/project \
          ghcr.io/cargo-prebuilt/ink-cross:${{ matrix.rust-version }}-${{ matrix.info.target }} \
          auditable build --verbose --workspace --profile=zmall --locked --target ${{ matrix.info.target }}
      - name: Rename
        run: cp ./target/${{ matrix.info.target }}/zmall/${{ env.bin-name }} ./${{ env.bin-name }}-${{ matrix.info.target }}
      - name: Chmod
        run: chmod +x ./${{ env.bin-name }}-${{ matrix.info.target }}
      - uses: actions/attest-build-provenance@v2
        with:
          subject-path: ./${{ env.bin-name }}-${{ matrix.info.target }}
      - name: Hash
        run: coreutils sha256sum ./${{ env.bin-name }}-${{ matrix.info.target }} > ${{ matrix.info.target }}.sha256
      - name: Artifact
        uses: actions/upload-artifact@v4
        with:
          name: target-${{ matrix.info.target }}
          path: |
            ${{ env.bin-name }}-${{ matrix.info.target }}
            ${{ matrix.info.target }}.sha256
